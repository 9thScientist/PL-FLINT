%{
#include <string.h>
#include "aux.h"

sds func; // Dynamic String for function header
GHashTable* varstype; // Hashtable that matches variable -> type
GQueue* lines; //Lines in the template
sds line, att; //Dynamic Strings for current line
%}
%option noyywrap
%x CODE TEMPLATE
%%
  int include_glib = 1;
<*>\/\/FLINT { BEGIN CODE; }
<*>#include\ <glib.h> { include_glib = 0; }

<TEMPLATE>\[%\ [^ ]+\ %\] { variable(yytext, "char*"); }
<TEMPLATE>\}\} { end_line(); end_function(); BEGIN CODE; }
<TEMPLATE>\n { line = sdscat(line, "\\n"); end_line();}
<TEMPLATE>. { line = sdscat(line, yytext); }

<CODE>.+=\{\{ { print_include_glib(&include_glib);
                BEGIN TEMPLATE;
                begin_function(yytext); }
<CODE>.|\n { ECHO; }

%%
int main (int argc, char* argv[]) {
    int i;
    varstype = g_hash_table_new(NULL, g_str_equal);
    lines = g_queue_new();

    if(argc >= 2) {
        yyin = fopen(argv[1], "r");

        for(i = 0; i < argc; i++) {
            if (!strcmp(argv[i], "-o"))
                yyout = fopen(argv[++i], "w");
        }
    }
    yylex();

    return 0;
}
